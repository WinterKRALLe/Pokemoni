---
import PokeCard from "./PokeCard.astro";
import Mainlayout from "../layouts/Mainlayout.astro";
// async function fetchPokemons() {
//     let urls = []
//     const response = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=10000`)
//     const data = await response.json()
//     data.results.forEach(pokemon => {
//         urls.push(pokemon['url']);
//     });
//     return urls
// }

// const fetchPokemonData = async () => {
//     const urls = await fetchPokemons();
//     const promises = urls.map(url => fetch(url).then(response => response.json()));
//     const pokemonData = await Promise.all(promises);

//     return pokemonData.map((pokemon) => ({
//         name: pokemon.name,
//         image: pokemon.sprites.other.dream_world.front_default,
//         type: pokemon.types[0].type.name,
//     }));
// };

// const pokemons = await fetchPokemonData()

async function fetchPokemons(offset: number, limit: number) {
    let urls = []
    const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=${limit}`)
    const data = await response.json()
    data.results.forEach(pokemon => {
        urls.push(pokemon['url']);
    });
    return urls
}

const fetchAllPokemonData = async () => {
    const limit = 200;
    let offset = 0;
    let pokemonData = [];

    while (true) {
        const urls = await fetchPokemons(offset, limit);
        if (urls.length === 0) break;
        
        const promises = urls.map(url => fetch(url).then(response => response.json()));
        const pageData = await Promise.all(promises);
        
        pokemonData = pokemonData.concat(pageData.map((pokemon) => ({
            name: pokemon.name,
            image: pokemon.sprites.other.dream_world.front_default,
            type: pokemon.types[0].type.name,
        })));
        
        offset += limit;
    }

    return pokemonData;
};

const pokemons = await fetchAllPokemonData();

---
<Mainlayout>
{ pokemons.map((p, i) => 
    <PokeCard
    name={p.name}
    image={p.image}
    type={p.type}
    key={i}
    />
)}
</Mainlayout>